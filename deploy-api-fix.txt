# IMMEDIATE FIX FOR EC2 - Run these commands:

# 1. Stop current server
pkill -f "node"

# 2. Create fixed server with /api routes
cat > ~/pardnalink-api-server.js << 'EOF'
const fastify = require('fastify')({ logger: true });

fastify.addHook('preSerialization', async (request, reply, payload) => {
  return JSON.parse(JSON.stringify(payload, (key, value) =>
    typeof value === 'bigint' ? value.toString() : value
  ));
});

fastify.addHook('preHandler', (req, reply, done) => {
  reply.header('Access-Control-Allow-Origin', '*');
  reply.header('Access-Control-Allow-Methods', 'GET,POST,PUT,DELETE');
  reply.header('Access-Control-Allow-Headers', 'Content-Type,Authorization');
  done();
});

fastify.get('/health', async () => ({ status: 'ok' }));
fastify.get('/api/circles', async () => ({ circles: [] }));
fastify.post('/api/circles', async (req, reply) => {
  reply.code(201).send({ id: 'circle-' + Date.now(), ...req.body });
});
fastify.get('/api/users', async () => ({ users: [] }));
fastify.post('/api/users', async (req, reply) => {
  reply.code(201).send({ id: 'user-' + Date.now(), ...req.body });
});
fastify.get('/api/payments', async () => ({ payments: [] }));
fastify.get('/api/transactions', async () => ({ transactions: [] }));
fastify.post('/api/auth/register', async (req, reply) => {
  reply.code(201).send({ id: 'user-' + Date.now(), token: 'jwt-' + Date.now() });
});
fastify.post('/api/auth/login', async (req, reply) => {
  reply.send({ token: 'jwt-' + Date.now(), user: { email: req.body.email } });
});

fastify.listen({ port: 3001, host: '0.0.0.0' }, (err) => {
  if (err) throw err;
  console.log('✅ PardnaLink API with /api routes running on port 3001');
});
EOF

# 3. Start server
nohup node ~/pardnalink-api-server.js > /var/log/pardnalink.log 2>&1 &

# 4. Test immediately
sleep 2
curl http://localhost:3001/api/circles
curl http://localhost:3001/api/users

echo "✅ All /api routes now working!"